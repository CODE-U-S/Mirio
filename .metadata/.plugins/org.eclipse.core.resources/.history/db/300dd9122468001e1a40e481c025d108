import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class ExplanationPanel extends JPanel {
    private BufferedImage image; // 이미지를 저장할 변수
    private CardLayout cardLayout; //화면 전환
    private JPanel cardPanel; // 화면 전환
    
    public ExplanationPanel(CardLayout cardLayout, JPanel cardPanel) {
        this.cardLayout = cardLayout;
        this.cardPanel = cardPanel;
        try {
            // 이미지 파일을 로드합니다. 이미지 파일은 images 폴더에 있어야 합니다.
            image = ImageIO.read(new File("images/explanation.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        // ExplanationPanel에 KeyAdapter를 추가하여 스페이스바 입력을 처리합니다.
        addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_SPACE) {
                    // 스페이스바를 눌렀을 때 RunPanel로 화면을 전환합니다.
                    cardLayout.show(cardPanel, "RunPanel");
                }
            }
        });

        // 포커스를 ExplanationPanel로 설정하여 KeyAdapter가 동작하도록 합니다.
        setFocusable(true);
        requestFocusInWindow(); // 포커스 설정 추가

        // setFocusable(true) 또는 requestFocusInWindow() 호출 후에 포커스가 필요한 컴포넌트여야 함
        // 다른 어떤 컴포넌트가 포커스를 잡지 않는지 확인
        System.out.println("Is Focusable: " + isFocusable());
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (image != null) {
            // 이미지를 패널에 그립니다.
            g.drawImage(image, 0, 0, 1200, 700, null);
        }
    }
}
