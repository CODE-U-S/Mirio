import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class StartPanel extends JPanel {
    private BufferedImage image; // 이미지를 저장할 변수
    private CardLayout cardLayout; // CardLayout 변수
    private JPanel cardPanel; // 패널 전환을 위한 JPanel 변수

    public StartPanel(CardLayout cardLayout, JPanel cardPanel) {
        this.cardLayout = cardLayout;
        this.cardPanel = cardPanel;

        try {
            // 이미지 파일을 로드합니다. 이미지 파일은 images 폴더에 있어야 합니다.
            image = ImageIO.read(new File("images/start.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }

        // 투명한 버튼 생성
        JButton startButton = new JButton();
        startButton.setContentAreaFilled(false); // 버튼의 내용 영역을 투명하게 만듭니다
        startButton.setOpaque(false); // 버튼을 투명하게 만듭니다.

        // 패널에 버튼을 추가
        setLayout(new BorderLayout()); // BorderLayout 설정
        JPanel buttonPanel = new JPanel(); // 버튼을 담을 패널
        buttonPanel.setOpaque(false); // 패널을 투명하게 만듭니다
        buttonPanel.add(startButton);
        add(buttonPanel, BorderLayout.CENTER); // 버튼 패널을 중앙에 배치

        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cardLayout.show(cardPanel, "Character Panel");
            }
        });
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (image != null) {
            // 이미지를 패널에 그립니다.
            g.drawImage(image, 0, 0, 1200, 700, null);
        }
    }
}
